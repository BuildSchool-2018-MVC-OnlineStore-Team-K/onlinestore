@model List<ViewModels.ProductDetailViewModel>
@{
    ViewBag.Title = "UpdateProductInfo/{ProductID}";
    Layout = "~/Views/Shared/BackEnd_Layout.cshtml";
}



<div class="row">
    <div class="col-5">

    </div>
    <div class="col-1">
        <h2>修改商品資訊</h2>
    </div>
</div>
<div class="row">
    <div class="col-2">產品種類</div>
    <div class="col-2">產品名稱</div>
    <div class="col-2">尺寸</div>
    <div class="col-2">顏色</div>
    <div class="col-2">存貨</div>
    <div class="col-2">單價</div>
</div>


@using (Html.BeginForm("UpdateProductInfoResult", "backendproduct",FormMethod.Post))
{
<form name="product" action="UpdateProductInfo">
    

    <div class="row">
        @if(Model.Count >0)
        {
        <div class="col-2">
            @Html.TextBoxFor(x => x[0].Category)
            <!-- <input type="text" name="Category" placeholder="產品種類" maxlength="30" required value="Model.First((x) => x.Category != null).Category" />-->
        </div>
        <div class="col-2">
            @Html.TextBoxFor(x => x[0].ProductName)
            <!--<input type="text" name="ProductName" placeholder="產品名稱" maxlength="30" required value="Model.First((x) => x.ProductName != null).ProductName" />-->
        </div>
        <div class="col-2">
            @Html.TextBoxFor(x => x[0].SizeType)
            <!--<input type="text" name="SizeType" placeholder="尺寸" maxlength="30" required value="Model.First((x) => x.SizeType != null).SizeType" />-->
        </div>
        <div class="col-2">
            @Html.TextBoxFor(x => x[0].Color)
            <!--<input type="text" name="Color" placeholder="顏色" maxlength="30" required value="Model.First((x) => x.Color != null).Color" />-->
        </div>
        <div class="col-2">
            @Html.TextBoxFor(x => x[0].Stock)
            <!--<input type="text" name="Stock" placeholder="存貨" maxlength="30" required value="Model.First((x) => x.Stock > -1).Stock" />-->
        </div>
        <div class="col-2">
            @Html.TextBoxFor(x => x[0].UnitPrice)
            <!--<input type="text" name="UnitPrice" placeholder="單價" maxlength="30" required value="Model.First((x) => x.UnitPrice > -1).UnitPrice" />-->
        </div>
        }
    </div>


    @for (var i=1;i<Model.Count;i++)
    {<div class="row">

         <div class="col-2">
             <!--<input name="Category" value=item.Category type="hidden" />-->
         </div>
         <div class="col-2">
             <!--<input name="ProductName" value=item.ProductName type="hidden" />-->
         </div>
         <div class="col-2">
             @Html.TextBoxFor(x => x[i].SizeType)
             <!--<input type="text" name="SizeType" placeholder="尺寸" maxlength="30" required value="item.SizeType" />-->
         </div>
         <div class="col-2">
             @Html.TextBoxFor(x => x[i].Color)
             <!--<input type="text" name="Color" placeholder="顏色" maxlength="30" required value="item.Color" />-->
         </div>
         <div class="col-2">
             @Html.TextBoxFor(x => x[i].Stock)
             <!--<input type="text" name="Stock" placeholder="存貨" maxlength="30" required value="item.Stock" />-->
         </div>
         <div class="col-2">
             @Html.TextBoxFor(x => x[i].UnitPrice)
             <!--<input type="text" name="UnitPrice" placeholder="單價" maxlength="30" required value="item.UnitPrice" />-->
         </div>

    </div>
    }

    <button type="submit" class="btn btn-secondary">儲存</button>
</form>

}


