(function (g) { var f = "2.1.6"; g.fn.cycle = function (b) { var a; if (this.length === 0 && !g.isReady) { a = { s: this.selector, c: this.context }; g.fn.cycle.log("requeuing slideshow (dom not ready)"); g(function () { g(a.s, a.c).cycle(b) }); return this } return this.each(function () { var n, o, r, c; var q = g(this); var p = g.fn.cycle.log; if (q.data("cycle.opts")) { return } if (q.data("cycle-log") === false || (b && b.log === false) || (o && o.log === false)) { p = g.noop } p("--c2 init--"); n = q.data(); for (var d in n) { if (n.hasOwnProperty(d) && /^cycle[A-Z]+/.test(d)) { c = n[d]; r = d.match(/^cycle(.*)/)[1].replace(/^[A-Z]/, e); p(r + ":", c, "(" + typeof c + ")"); n[r] = c } } o = g.extend({}, g.fn.cycle.defaults, n, b || {}); o.timeoutId = 0; o.paused = o.paused || false; o.container = q; o._maxZ = o.maxZ; o.API = g.extend({ _container: q }, g.fn.cycle.API); o.API.log = p; o.API.trigger = function (j, i) { o.container.trigger(j, i); return o.API }; q.data("cycle.opts", o); q.data("cycle.API", o.API); o.API.trigger("cycle-bootstrap", [o, o.API]); o.API.addInitialSlides(); o.API.preInitSlideshow(); if (o.slides.length) { o.API.initSlideshow() } }) }; g.fn.cycle.API = { opts: function () { return this._container.data("cycle.opts") }, addInitialSlides: function () { var a = this.opts(); var b = a.slides; a.slideCount = 0; a.slides = g(); b = b.jquery ? b : a.container.find(b); if (a.random) { b.sort(function () { return Math.random() - 0.5 }) } a.API.add(b) }, preInitSlideshow: function () { var a = this.opts(); a.API.trigger("cycle-pre-initialize", [a]); var b = g.fn.cycle.transitions[a.fx]; if (b && g.isFunction(b.preInit)) { b.preInit(a) } a._preInitialized = true }, postInitSlideshow: function () { var a = this.opts(); a.API.trigger("cycle-post-initialize", [a]); var b = g.fn.cycle.transitions[a.fx]; if (b && g.isFunction(b.postInit)) { b.postInit(a) } }, initSlideshow: function () { var a = this.opts(); var c = a.container; var b; a.API.calcFirstSlide(); if (a.container.css("position") == "static") { a.container.css("position", "relative") } g(a.slides[a.currSlide]).css({ opacity: 1, display: "block", visibility: "visible" }); a.API.stackSlides(a.slides[a.currSlide], a.slides[a.nextSlide], !a.reverse); if (a.pauseOnHover) { if (a.pauseOnHover !== true) { c = g(a.pauseOnHover) } c.hover(function () { a.API.pause(true) }, function () { a.API.resume(true) }) } if (a.timeout) { b = a.API.getSlideOpts(a.currSlide); a.API.queueTransition(b, b.timeout + a.delay) } a._initialized = true; a.API.updateView(true); a.API.trigger("cycle-initialized", [a]); a.API.postInitSlideshow() }, pause: function (d) { var b = this.opts(), c = b.API.getSlideOpts(), a = b.hoverPaused || b.paused; if (d) { b.hoverPaused = true } else { b.paused = true } if (!a) { b.container.addClass("cycle-paused"); b.API.trigger("cycle-paused", [b]).log("cycle-paused"); if (c.timeout) { clearTimeout(b.timeoutId); b.timeoutId = 0; b._remainingTimeout -= (g.now() - b._lastQueue); if (b._remainingTimeout < 0 || isNaN(b._remainingTimeout)) { b._remainingTimeout = undefined } } } }, resume: function (b) { var a = this.opts(), c = !a.hoverPaused && !a.paused, d; if (b) { a.hoverPaused = false } else { a.paused = false } if (!c) { a.container.removeClass("cycle-paused"); if (a.slides.filter(":animated").length === 0) { a.API.queueTransition(a.API.getSlideOpts(), a._remainingTimeout) } a.API.trigger("cycle-resumed", [a, a._remainingTimeout]).log("cycle-resumed") } }, add: function (c, k) { var b = this.opts(); var d = b.slideCount; var a = false; var l; if (g.type(c) == "string") { c = g.trim(c) } g(c).each(function (j) { var i; var n = g(this); if (k) { b.container.prepend(n) } else { b.container.append(n) } b.slideCount++; i = b.API.buildSlideOpts(n); if (k) { b.slides = g(n).add(b.slides) } else { b.slides = b.slides.add(n) } b.API.initSlide(i, n, --b._maxZ); n.data("cycle.opts", i); b.API.trigger("cycle-slide-added", [b, i, n]) }); b.API.updateView(true); a = b._preInitialized && (d < 2 && b.slideCount >= 1); if (a) { if (!b._initialized) { b.API.initSlideshow() } else { if (b.timeout) { l = b.slides.length; b.nextSlide = b.reverse ? l - 1 : 1; if (!b.timeoutId) { b.API.queueTransition(b) } } } } }, calcFirstSlide: function () { var a = this.opts(); var b; b = parseInt(a.startingSlide || 0, 10); if (b >= a.slides.length || b < 0) { b = 0 } a.currSlide = b; if (a.reverse) { a.nextSlide = b - 1; if (a.nextSlide < 0) { a.nextSlide = a.slides.length - 1 } } else { a.nextSlide = b + 1; if (a.nextSlide == a.slides.length) { a.nextSlide = 0 } } }, calcNextSlide: function () { var a = this.opts(); var b; if (a.reverse) { b = (a.nextSlide - 1) < 0; a.nextSlide = b ? a.slideCount - 1 : a.nextSlide - 1; a.currSlide = b ? 0 : a.nextSlide + 1 } else { b = (a.nextSlide + 1) == a.slides.length; a.nextSlide = b ? 0 : a.nextSlide + 1; a.currSlide = b ? a.slides.length - 1 : a.nextSlide - 1 } }, calcTx: function (a, c) { var b = a; var d; if (b._tempFx) { d = g.fn.cycle.transitions[b._tempFx] } else { if (c && b.manualFx) { d = g.fn.cycle.transitions[b.manualFx] } } if (!d) { d = g.fn.cycle.transitions[b.fx] } b._tempFx = null; this.opts()._tempFx = null; if (!d) { d = g.fn.cycle.transitions.fade; b.API.log('Transition "' + b.fx + '" not found.  Using fade.') } return d }, prepareTx: function (n, o) { var c = this.opts(); var a, b, m, d, p; if (c.slideCount < 2) { c.timeoutId = 0; return } if (n && (!c.busy || c.manualTrump)) { c.API.stopTransition(); c.busy = false; clearTimeout(c.timeoutId); c.timeoutId = 0 } if (c.busy) { return } if (c.timeoutId === 0 && !n) { return } b = c.slides[c.currSlide]; m = c.slides[c.nextSlide]; d = c.API.getSlideOpts(c.nextSlide); p = c.API.calcTx(d, n); c._tx = p; if (n && d.manualSpeed !== undefined) { d.speed = d.manualSpeed } if (c.nextSlide != c.currSlide && (n || (!c.paused && !c.hoverPaused && c.timeout))) { c.API.trigger("cycle-before", [d, b, m, o]); if (p.before) { p.before(d, b, m, o) } a = function () { c.busy = false; if (!c.container.data("cycle.opts")) { return } if (p.after) { p.after(d, b, m, o) } c.API.trigger("cycle-after", [d, b, m, o]); c.API.queueTransition(d); c.API.updateView(true) }; c.busy = true; if (p.transition) { p.transition(d, b, m, o, a) } else { c.API.doTransition(d, b, m, o, a) } c.API.calcNextSlide(); c.API.updateView() } else { c.API.queueTransition(d) } }, doTransition: function (n, d, q, p, b) { var r = n; var a = g(d), o = g(q); var c = function () { o.animate(r.animIn || { opacity: 1 }, r.speed, r.easeIn || r.easing, b) }; o.css(r.cssBefore || {}); a.animate(r.animOut || {}, r.speed, r.easeOut || r.easing, function () { a.css(r.cssAfter || {}); if (!r.sync) { c() } }); if (r.sync) { c() } }, queueTransition: function (b, d) { var c = this.opts(); var a = d !== undefined ? d : b.timeout; if (c.nextSlide === 0 && --c.loop === 0) { c.API.log("terminating; loop=0"); c.timeout = 0; if (a) { setTimeout(function () { c.API.trigger("cycle-finished", [c]) }, a) } else { c.API.trigger("cycle-finished", [c]) } c.nextSlide = c.currSlide; return } if (c.continueAuto !== undefined) { if (c.continueAuto === false || (g.isFunction(c.continueAuto) && c.continueAuto() === false)) { c.API.log("terminating automatic transitions"); c.timeout = 0; if (c.timeoutId) { clearTimeout(c.timeoutId) } return } } if (a) { c._lastQueue = g.now(); if (d === undefined) { c._remainingTimeout = b.timeout } if (!c.paused && !c.hoverPaused) { c.timeoutId = setTimeout(function () { c.API.prepareTx(false, !c.reverse) }, a) } } }, stopTransition: function () { var a = this.opts(); if (a.slides.filter(":animated").length) { a.slides.stop(false, true); a.API.trigger("cycle-transition-stopped", [a]) } if (a._tx && a._tx.stopTransition) { a._tx.stopTransition(a) } }, advanceSlide: function (a) { var b = this.opts(); clearTimeout(b.timeoutId); b.timeoutId = 0; b.nextSlide = b.currSlide + a; if (b.nextSlide < 0) { b.nextSlide = b.slides.length - 1 } else { if (b.nextSlide >= b.slides.length) { b.nextSlide = 0 } } b.API.prepareTx(true, a >= 0); return false }, buildSlideOpts: function (n) { var d = this.opts(); var a, o; var m = n.data() || {}; for (var b in m) { if (m.hasOwnProperty(b) && /^cycle[A-Z]+/.test(b)) { a = m[b]; o = b.match(/^cycle(.*)/)[1].replace(/^[A-Z]/, e); d.API.log("[" + (d.slideCount - 1) + "]", o + ":", a, "(" + typeof a + ")"); m[o] = a } } m = g.extend({}, g.fn.cycle.defaults, d, m); m.slideNum = d.slideCount; try { delete m.API; delete m.slideCount; delete m.currSlide; delete m.nextSlide; delete m.slides } catch (c) { } return m }, getSlideOpts: function (c) { var a = this.opts(); if (c === undefined) { c = a.currSlide } var d = a.slides[c]; var b = g(d).data("cycle.opts"); return g.extend({}, a, b) }, initSlide: function (a, d, c) { var b = this.opts(); d.css(a.slideCss || {}); if (c > 0) { d.css("zIndex", c) } if (isNaN(a.speed)) { a.speed = g.fx.speeds[a.speed] || g.fx.speeds._default } if (!a.sync) { a.speed = a.speed / 2 } d.addClass(b.slideClass) }, updateView: function (l, a, k) { var b = this.opts(); if (!b._initialized) { return } var c = b.API.getSlideOpts(); var d = b.slides[b.currSlide]; if (!l && a !== true) { b.API.trigger("cycle-update-view-before", [b, c, d]); if (b.updateView < 0) { return } } if (b.slideActiveClass) { b.slides.removeClass(b.slideActiveClass).eq(b.currSlide).addClass(b.slideActiveClass) } if (l && b.hideNonActive) { b.slides.filter(":not(." + b.slideActiveClass + ")").css("visibility", "hidden") } if (b.updateView === 0) { setTimeout(function () { b.API.trigger("cycle-update-view", [b, c, d, l]) }, c.speed / (b.sync ? 2 : 1)) } if (b.updateView !== 0) { b.API.trigger("cycle-update-view", [b, c, d, l]) } if (l) { b.API.trigger("cycle-update-view-after", [b, c, d]) } }, getComponent: function (b) { var a = this.opts(); var c = a[b]; if (typeof c === "string") { return (/^\s*[\>|\+|~]/).test(c) ? a.container.find(c) : g(c) } if (c.jquery) { return c } return g(c) }, stackSlides: function (b, d, i) { var c = this.opts(); if (!b) { b = c.slides[c.currSlide]; d = c.slides[c.nextSlide]; i = !c.reverse } g(b).css("zIndex", c.maxZ); var m; var a = c.maxZ - 2; var n = c.slideCount; if (i) { for (m = c.currSlide + 1; m < n; m++) { g(c.slides[m]).css("zIndex", a--) } for (m = 0; m < c.currSlide; m++) { g(c.slides[m]).css("zIndex", a--) } } else { for (m = c.currSlide - 1; m >= 0; m--) { g(c.slides[m]).css("zIndex", a--) } for (m = n - 1; m > c.currSlide; m--) { g(c.slides[m]).css("zIndex", a--) } } g(d).css("zIndex", c.maxZ - 1) }, getSlideIndex: function (a) { return this.opts().slides.index(a) } }; g.fn.cycle.log = function h() { if (window.console && console.log) { console.log("[cycle2] " + Array.prototype.join.call(arguments, " ")) } }; g.fn.cycle.version = function () { return "Cycle2: " + f }; function e(a) { return (a || "").toLowerCase() } g.fn.cycle.transitions = { custom: {}, none: { before: function (b, a, c, d) { b.API.stackSlides(c, a, d); b.cssBefore = { opacity: 1, visibility: "visible", display: "block" } } }, fade: { before: function (b, a, c, d) { var j = b.API.getSlideOpts(b.nextSlide).slideCss || {}; b.API.stackSlides(a, c, d); b.cssBefore = g.extend(j, { opacity: 0, visibility: "visible", display: "block" }); b.animIn = { opacity: 1 }; b.animOut = { opacity: 0 } } }, fadeout: { before: function (b, a, c, d) { var j = b.API.getSlideOpts(b.nextSlide).slideCss || {}; b.API.stackSlides(a, c, d); b.cssBefore = g.extend(j, { opacity: 1, visibility: "visible", display: "block" }); b.animOut = { opacity: 0 } } }, scrollHorz: { before: function (b, a, c, d) { b.API.stackSlides(a, c, d); var j = b.container.css("overflow", "hidden").width(); b.cssBefore = { left: d ? j : -j, top: 0, opacity: 1, visibility: "visible", display: "block" }; b.cssAfter = { zIndex: b._maxZ - 2, left: 0 }; b.animIn = { left: 0 }; b.animOut = { left: d ? -j : j } } } }; g.fn.cycle.defaults = { allowWrap: true, autoSelector: ".cycle-slideshow[data-cycle-auto-init!=false]", delay: 0, easing: null, fx: "fade", hideNonActive: true, loop: 0, manualFx: undefined, manualSpeed: undefined, manualTrump: true, maxZ: 100, pauseOnHover: false, reverse: false, slideActiveClass: "cycle-slide-active", slideClass: "cycle-slide", slideCss: { position: "absolute", top: 0, left: 0 }, slides: "> img", speed: 500, startingSlide: 0, sync: true, timeout: 4000, updateView: 0 }; g(document).ready(function () { g(g.fn.cycle.defaults.autoSelector).cycle() }) })(jQuery); (function (i) { i.extend(i.fn.cycle.defaults, { autoHeight: 0, autoHeightSpeed: 250, autoHeightEasing: null }); i(document).on("cycle-initialized", function (a, b) { var m = b.autoHeight; var e = i.type(m); var n = null; var d; if (e !== "string" && e !== "number") { return } b.container.on("cycle-slide-added cycle-slide-removed", f); b.container.on("cycle-destroyed", j); if (m == "container") { b.container.on("cycle-before", h) } else { if (e === "string" && /\d+\:\d+/.test(m)) { d = m.match(/(\d+)\:(\d+)/); d = d[1] / d[2]; b._autoHeightRatio = d } } if (e !== "number") { b._autoHeightOnResize = function () { clearTimeout(n); n = setTimeout(c, 50) }; i(window).on("resize orientationchange", b._autoHeightOnResize) } setTimeout(c, 30); function c() { f(a, b) } }); function f(c, d) { var a, l, b; var e = d.autoHeight; if (e == "container") { l = i(d.slides[d.currSlide]).outerHeight(); d.container.height(l) } else { if (d._autoHeightRatio) { d.container.height(d.container.width() / d._autoHeightRatio) } else { if (e === "calc" || (i.type(e) == "number" && e >= 0)) { if (e === "calc") { b = g(c, d) } else { if (e >= d.slides.length) { b = 0 } else { b = e } } if (b == d._sentinelIndex) { return } d._sentinelIndex = b; if (d._sentinel) { d._sentinel.remove() } a = i(d.slides[b].cloneNode(true)); a.removeAttr("id name rel").find("[id],[name],[rel]").removeAttr("id name rel"); a.css({ position: "static", visibility: "hidden", display: "block" }).prependTo(d.container).addClass("cycle-sentinel cycle-slide").removeClass("cycle-slide-active"); a.find("*").css("visibility", "hidden"); d._sentinel = a } } } } function g(a, b) { var c = 0, d = -1; b.slides.each(function (l) { var e = i(this).height(); if (e > d) { d = e; c = l } }); return c } function h(a, b, d, m, e) { var c = i(m).outerHeight(); b.container.animate({ height: c }, b.autoHeightSpeed, b.autoHeightEasing) } function j(a, b) { if (b._autoHeightOnResize) { i(window).off("resize orientationchange", b._autoHeightOnResize); b._autoHeightOnResize = null } b.container.off("cycle-slide-added cycle-slide-removed", f); b.container.off("cycle-destroyed", j); b.container.off("cycle-before", h); if (b._sentinel) { b._sentinel.remove(); b._sentinel = null } } })(jQuery); (function (b) { b.extend(b.fn.cycle.defaults, { caption: "> .cycle-caption", captionTemplate: "{{slideNum}} / {{slideCount}}", overlay: "> .cycle-overlay", overlayTemplate: "<div>{{title}}</div><div>{{desc}}</div>", captionModule: "caption" }); b(document).on("cycle-update-view", function (e, h, i, j) { if (h.captionModule !== "caption") { return } var a; b.each(["caption", "overlay"], function () { var f = this; var c = i[f + "Template"]; var d = h.API.getComponent(f); if (d.length && c) { d.html(h.API.tmpl(c, i, h, j)); d.show() } else { d.hide() } }) }); b(document).on("cycle-destroyed", function (e, f) { var a; b.each(["caption", "overlay"], function () { var d = this, c = f[d + "Template"]; if (f[d] && c) { a = f.API.getComponent("caption"); a.empty() } }) }) })(jQuery); (function (c) { var d = c.fn.cycle; c.fn.cycle = function (i) { var a, b, h; var j = c.makeArray(arguments); if (c.type(i) == "number") { return this.cycle("goto", i) } if (c.type(i) == "string") { return this.each(function () { var e; a = i; h = c(this).data("cycle.opts"); if (h === undefined) { d.log('slideshow must be initialized before sending commands; "' + a + '" ignored'); return } else { a = a == "goto" ? "jump" : a; b = h.API[a]; if (c.isFunction(b)) { e = c.makeArray(j); e.shift(); return b.apply(h.API, e) } else { d.log("unknown command: ", a) } } }) } else { return d.apply(this, arguments) } }; c.extend(c.fn.cycle, d); c.extend(d.API, { next: function () { var a = this.opts(); if (a.busy && !a.manualTrump) { return } var b = a.reverse ? -1 : 1; if (a.allowWrap === false && (a.currSlide + b) >= a.slideCount) { return } a.API.advanceSlide(b); a.API.trigger("cycle-next", [a]).log("cycle-next") }, prev: function () { var a = this.opts(); if (a.busy && !a.manualTrump) { return } var b = a.reverse ? 1 : -1; if (a.allowWrap === false && (a.currSlide + b) < 0) { return } a.API.advanceSlide(b); a.API.trigger("cycle-prev", [a]).log("cycle-prev") }, destroy: function () { this.stop(); var a = this.opts(); var b = c.isFunction(c._data) ? c._data : c.noop; clearTimeout(a.timeoutId); a.timeoutId = 0; a.API.stop(); a.API.trigger("cycle-destroyed", [a]).log("cycle-destroyed"); a.container.removeData(); b(a.container[0], "parsedAttrs", false); if (!a.retainStylesOnDestroy) { a.container.removeAttr("style"); a.slides.removeAttr("style"); a.slides.removeClass(a.slideActiveClass) } a.slides.each(function () { var f = c(this); f.removeData(); f.removeClass(a.slideClass); b(this, "parsedAttrs", false) }) }, jump: function (i, a) { var h; var b = this.opts(); if (b.busy && !b.manualTrump) { return } var j = parseInt(i, 10); if (isNaN(j) || j < 0 || j >= b.slides.length) { b.API.log("goto: invalid slide index: " + j); return } if (j == b.currSlide) { b.API.log("goto: skipping, already on slide", j); return } b.nextSlide = j; clearTimeout(b.timeoutId); b.timeoutId = 0; b.API.log("goto: ", j, " (zero-index)"); h = b.currSlide < b.nextSlide; b._tempFx = a; b.API.prepareTx(true, h) }, stop: function () { var a = this.opts(); var b = a.container; clearTimeout(a.timeoutId); a.timeoutId = 0; a.API.stopTransition(); if (a.pauseOnHover) { if (a.pauseOnHover !== true) { b = c(a.pauseOnHover) } b.off("mouseenter mouseleave") } a.API.trigger("cycle-stopped", [a]).log("cycle-stopped") }, reinit: function () { var a = this.opts(); a.API.destroy(); a.container.cycle() }, remove: function (l) { var a = this.opts(); var n, m, b = [], i = 1; for (var k = 0; k < a.slides.length; k++) { n = a.slides[k]; if (k == l) { m = n } else { b.push(n); c(n).data("cycle.opts").slideNum = i; i++ } } if (m) { a.slides = c(b); a.slideCount--; c(m).remove(); if (l == a.currSlide) { a.API.advanceSlide(1) } else { if (l < a.currSlide) { a.currSlide-- } else { a.currSlide++ } } a.API.trigger("cycle-slide-removed", [a, l, m]).log("cycle-slide-removed"); a.API.updateView() } } }); c(document).on("click.cycle", "[data-cycle-cmd]", function (b) { b.preventDefault(); var e = c(this); var a = e.data("cycle-cmd"); var h = e.data("cycle-context") || ".cycle-slideshow"; c(h).cycle(a, e.data("cycle-arg")) }) })(jQuery); (function (c) { c(document).on("cycle-pre-initialize", function (a, b) { d(b, true); b._onHashChange = function () { d(b, false) }; c(window).on("hashchange", b._onHashChange) }); c(document).on("cycle-update-view", function (a, b, e) { if (e.hash && ("#" + e.hash) != window.location.hash) { b._hashFence = true; window.location.hash = e.hash } }); c(document).on("cycle-destroyed", function (a, b) { if (b._onHashChange) { c(window).off("hashchange", b._onHashChange) } }); function d(b, f) { var a; if (b._hashFence) { b._hashFence = false; return } a = window.location.hash.substring(1); b.slides.each(function (e) { if (c(this).data("cycle-hash") == a) { if (f === true) { b.startingSlide = e } else { var h = b.currSlide < e; b.nextSlide = e; b.API.prepareTx(true, h) } return false } }) } })(jQuery); (function (b) { b.extend(b.fn.cycle.defaults, { loader: false }); b(document).on("cycle-bootstrap", function (g, a) { var e; if (!a.loader) { return } e = a.API.add; a.API.add = h; function h(d, i) { var n = []; if (b.type(d) == "string") { d = b.trim(d) } else { if (b.type(d) === "array") { for (var f = 0; f < d.length; f++) { d[f] = b(d[f])[0] } } } d = b(d); var o = d.length; if (!o) { return } d.css("visibility", "hidden").appendTo("body").each(function (k) { var j = 0; var m = b(this); var s = m.is("img") ? m : m.find("img"); m.data("index", k); s = s.filter(":not(.cycle-loader-ignore)").filter(':not([src=""])'); if (!s.length) { --o; n.push(m); return } j = s.length; s.each(function () { if (this.complete) { l() } else { b(this).load(function () { l() }).on("error", function () { if (--j === 0) { a.API.log("slide skipped; img not loaded:", this.src); if (--o === 0 && a.loader == "wait") { e.apply(a.API, [n, i]) } } }) } }); function l() { if (--j === 0) { --o; p(m) } } }); if (o) { a.container.addClass("cycle-loading") } function p(j) { var k; if (a.loader == "wait") { n.push(j); if (o === 0) { n.sort(c); e.apply(a.API, [n, i]); a.container.removeClass("cycle-loading") } } else { k = b(a.slides[a.currSlide]); e.apply(a.API, [j, i]); k.show(); a.container.removeClass("cycle-loading") } } function c(k, j) { return k.data("index") - j.data("index") } } }) })(jQuery); (function (f) { f.extend(f.fn.cycle.defaults, { pager: "> .cycle-pager", pagerActiveClass: "cycle-pager-active", pagerEvent: "click.cycle", pagerEventBubble: undefined, pagerTemplate: "<span>&bull;</span>" }); f(document).on("cycle-bootstrap", function (a, b, c) { c.buildPagerLink = e }); f(document).on("cycle-slide-added", function (b, c, i, a) { if (c.pager) { c.API.buildPagerLink(c, i, a); c.API.page = d } }); f(document).on("cycle-slide-removed", function (a, b, j, c) { if (b.pager) { var k = b.API.getComponent("pager"); k.each(function () { var g = f(this); f(g.children()[j]).remove() }) } }); f(document).on("cycle-update-view", function (a, b, c) { var i; if (b.pager) { i = b.API.getComponent("pager"); i.each(function () { f(this).children().removeClass(b.pagerActiveClass).eq(b.currSlide).addClass(b.pagerActiveClass) }) } }); f(document).on("cycle-destroyed", function (a, b) { var c = b.API.getComponent("pager"); if (c) { c.children().off(b.pagerEvent); if (b.pagerTemplate) { c.empty() } } }); function e(b, c, j) { var a; var i = b.API.getComponent("pager"); i.each(function () { var h = f(this); if (c.pagerTemplate) { var g = b.API.tmpl(c.pagerTemplate, c, b, j[0]); a = f(g).appendTo(h) } else { a = h.children().eq(b.slideCount - 1) } a.on(b.pagerEvent, function (l) { if (!b.pagerEventBubble) { l.preventDefault() } b.API.page(h, l.currentTarget) }) }) } function d(l, a) { var c = this.opts(); if (c.busy && !c.manualTrump) { return } var k = l.children().index(a); var b = k; var j = c.currSlide < b; if (c.currSlide == b) { return } c.nextSlide = b; c._tempFx = c.pagerFx; c.API.prepareTx(true, j); c.API.trigger("cycle-pager-activated", [c, l, a]) } })(jQuery); (function (b) { b.extend(b.fn.cycle.defaults, { next: "> .cycle-next", nextEvent: "click.cycle", disabledClass: "disabled", prev: "> .cycle-prev", prevEvent: "click.cycle", swipe: false }); b(document).on("cycle-initialized", function (e, h) { h.API.getComponent("next").on(h.nextEvent, function (c) { c.preventDefault(); h.API.next() }); h.API.getComponent("prev").on(h.prevEvent, function (c) { c.preventDefault(); h.API.prev() }); if (h.swipe) { var a = h.swipeVert ? "swipeUp.cycle" : "swipeLeft.cycle swipeleft.cycle"; var g = h.swipeVert ? "swipeDown.cycle" : "swipeRight.cycle swiperight.cycle"; h.container.on(a, function (c) { h._tempFx = h.swipeFx; h.API.next() }); h.container.on(g, function () { h._tempFx = h.swipeFx; h.API.prev() }) } }); b(document).on("cycle-update-view", function (m, r, n, e) { if (r.allowWrap) { return } var a = r.disabledClass; var p = r.API.getComponent("next"); var q = r.API.getComponent("prev"); var l = r._prevBoundry || 0; var o = (r._nextBoundry !== undefined) ? r._nextBoundry : r.slideCount - 1; if (r.currSlide == o) { p.addClass(a).prop("disabled", true) } else { p.removeClass(a).prop("disabled", false) } if (r.currSlide === l) { q.addClass(a).prop("disabled", true) } else { q.removeClass(a).prop("disabled", false) } }); b(document).on("cycle-destroyed", function (d, a) { a.API.getComponent("prev").off(a.nextEvent); a.API.getComponent("next").off(a.prevEvent); a.container.off("swipeleft.cycle swiperight.cycle swipeLeft.cycle swipeRight.cycle swipeUp.cycle swipeDown.cycle") }) })(jQuery); (function (b) { b.extend(b.fn.cycle.defaults, { progressive: false }); b(document).on("cycle-pre-initialize", function (o, t) { if (!t.progressive) { return } var q = t.API; var e = q.next; var n = q.prev; var a = q.prepareTx; var m = b.type(t.progressive); var s, r; if (m == "array") { s = t.progressive } else { if (b.isFunction(t.progressive)) { s = t.progressive(t) } else { if (m == "string") { r = b(t.progressive); s = b.trim(r.html()); if (!s) { return } if (/^(\[)/.test(s)) { try { s = b.parseJSON(s) } catch (p) { q.log("error parsing progressive slides", p); return } } else { s = s.split(new RegExp(r.data("cycle-split") || "\n")); if (!s[s.length - 1]) { s.pop() } } } } } if (a) { q.prepareTx = function (f, g) { var c, d; if (f || s.length === 0) { a.apply(t.API, [f, g]); return } if (g && t.currSlide == (t.slideCount - 1)) { d = s[0]; s = s.slice(1); t.container.one("cycle-slide-added", function (h, i) { setTimeout(function () { i.API.advanceSlide(1) }, 50) }); t.API.add(d) } else { if (!g && t.currSlide === 0) { c = s.length - 1; d = s[c]; s = s.slice(0, c); t.container.one("cycle-slide-added", function (h, i) { setTimeout(function () { i.currSlide = 1; i.API.advanceSlide(-1) }, 50) }); t.API.add(d, true) } else { a.apply(t.API, [f, g]) } } } } if (e) { q.next = function () { var c = this.opts(); if (s.length && c.currSlide == (c.slideCount - 1)) { var d = s[0]; s = s.slice(1); c.container.one("cycle-slide-added", function (f, g) { e.apply(g.API); g.container.removeClass("cycle-loading") }); c.container.addClass("cycle-loading"); c.API.add(d) } else { e.apply(c.API) } } } if (n) { q.prev = function () { var f = this.opts(); if (s.length && f.currSlide === 0) { var c = s.length - 1; var d = s[c]; s = s.slice(0, c); f.container.one("cycle-slide-added", function (g, h) { h.currSlide = 1; h.API.advanceSlide(-1); h.container.removeClass("cycle-loading") }); f.container.addClass("cycle-loading"); f.API.add(d, true) } else { n.apply(f.API) } } } }) })(jQuery); (function (b) { b.extend(b.fn.cycle.defaults, { tmplRegex: "{{((.)?.*?)}}" }); b.extend(b.fn.cycle.API, { tmpl: function (f, g) { var h = new RegExp(g.tmplRegex || b.fn.cycle.defaults.tmplRegex, "g"); var a = b.makeArray(arguments); a.shift(); return f.replace(h, function (j, c) { var i, o, d, p, e = c.split("."); for (i = 0; i < a.length; i++) { d = a[i]; if (!d) { continue } if (e.length > 1) { p = d; for (o = 0; o < e.length; o++) { d = p; p = p[e[o]] || c } } else { p = d[c] } if (b.isFunction(p)) { return p.apply(d, a) } if (p !== undefined && p !== null && p != c) { return p } } return c }) } }) })(jQuery);