(function (a) { if (typeof define === "function" && define.amd) { define(["jquery"], a) } else { if (typeof module === "object" && module.exports) { a(require("jquery")) } else { a(jQuery) } } }(function (g) { var b = Object.prototype.toString.call(window.operamini) === "[object OperaMini]"; var a = "placeholder" in document.createElement("input") && !b; var h = "placeholder" in document.createElement("textarea") && !b; var f = g.valHooks; var c = g.propHooks; var l; var k; var e = {}; if (a && h) { k = g.fn.placeholder = function () { return this }; k.input = true; k.textarea = true } else { k = g.fn.placeholder = function (n) { var o = { customClass: "placeholder" }; e = g.extend({}, o, n); return this.filter((a ? "textarea" : ":input") + "[placeholder]").not("." + e.customClass).bind({ "focus.placeholder": d, "blur.placeholder": i }).data("placeholder-enabled", true).trigger("blur.placeholder") }; k.input = a; k.textarea = h; l = { get: function (o) { var n = g(o); var p = n.data("placeholder-password"); if (p) { return p[0].value } return n.data("placeholder-enabled") && n.hasClass(e.customClass) ? "" : o.value }, set: function (o, q) { var n = g(o); var r; var p; if (q !== "") { r = n.data("placeholder-textinput"); p = n.data("placeholder-password"); if (r) { d.call(r[0], true, q) || (o.value = q); r[0].value = q } else { if (p) { d.call(o, true, q) || (p[0].value = q); o.value = q } } } if (!n.data("placeholder-enabled")) { o.value = q; return n } if (q === "") { o.value = q; if (o != m()) { i.call(o) } } else { if (n.hasClass(e.customClass)) { d.call(o) } o.value = q } return n } }; if (!a) { f.input = l; c.value = l } if (!h) { f.textarea = l; c.value = l } g(function () { g(document).delegate("form", "submit.placeholder", function () { var n = g("." + e.customClass, this).each(function () { d.call(this, true, "") }); setTimeout(function () { n.each(i) }, 10) }) }); g(window).bind("beforeunload.placeholder", function () { g("." + e.customClass).each(function () { this.value = "" }) }) } function j(o) { var n = {}; var p = /^jQuery\d+$/; g.each(o.attributes, function (r, q) { if (q.specified && !p.test(q.name)) { n[q.name] = q.value } }); return n } function d(o, p) { var n = this; var q = g(n); if (n.value === q.attr("placeholder") && q.hasClass(e.customClass)) { n.value = ""; q.removeClass(e.customClass); if (q.data("placeholder-password")) { q = q.hide().nextAll('input[type="password"]:first').show().attr("id", q.removeAttr("id").data("placeholder-id")); if (o === true) { q[0].value = p; return p } q.focus() } else { n == m() && n.select() } } } function i(p) { var t; var n = this; var s = g(n); var r = n.id; if (p && p.type === "blur") { if (s.hasClass(e.customClass)) { return } if (n.type === "password") { t = s.prevAll('input[type="text"]:first'); if (t.length > 0 && t.is(":visible")) { return } } } if (n.value === "") { if (n.type === "password") { if (!s.data("placeholder-textinput")) { try { t = s.clone().prop({ type: "text" }) } catch (q) { t = g("<input>").attr(g.extend(j(this), { type: "text" })) } t.removeAttr("name").data({ "placeholder-enabled": true, "placeholder-password": s, "placeholder-id": r }).bind("focus.placeholder", d); s.data({ "placeholder-textinput": t, "placeholder-id": r }).before(t) } n.value = ""; s = s.removeAttr("id").hide().prevAll('input[type="text"]:first').attr("id", s.data("placeholder-id")).show() } else { var o = s.data("placeholder-password"); if (o) { o[0].value = ""; s.attr("id", s.data("placeholder-id")).show().nextAll('input[type="password"]:last').hide().removeAttr("id") } } s.addClass(e.customClass); s[0].value = s.attr("placeholder") } else { s.removeClass(e.customClass) } } function m() { try { return document.activeElement } catch (n) { } } }));